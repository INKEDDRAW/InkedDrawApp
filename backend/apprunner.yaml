# AWS App Runner Configuration
# Defines how the backend service should be deployed and configured

version: 1.0
runtime: nodejs18
build:
  commands:
    build:
      - echo "Installing dependencies..."
      - npm ci --only=production
      - echo "Building application..."
      - npm run build
      - echo "Build completed successfully"
  env:
    - name: NODE_ENV
      value: production
    - name: NPM_CONFIG_PRODUCTION
      value: true

run:
  runtime-version: 18
  command: npm run start:prod
  network:
    port: 3000
    env: PORT
  env:
    # Application Configuration
    - name: NODE_ENV
      value: production
    - name: PORT
      value: 3000
    - name: API_VERSION
      value: v1
    
    # Database Configuration
    - name: SUPABASE_URL
      value: https://gyhpbpfxollqcomxgrqb.supabase.co
    - name: SUPABASE_ANON_KEY
      value: ${SUPABASE_ANON_KEY}
    - name: SUPABASE_SERVICE_ROLE_KEY
      value: ${SUPABASE_SERVICE_ROLE_KEY}
    
    # Authentication
    - name: JWT_SECRET
      value: ${JWT_SECRET}
    
    # Redis Configuration
    - name: REDIS_URL
      value: ${REDIS_URL}
    
    # AWS Services
    - name: AWS_ACCESS_KEY_ID
      value: ${AWS_ACCESS_KEY_ID}
    - name: AWS_SECRET_ACCESS_KEY
      value: ${AWS_SECRET_ACCESS_KEY}
    - name: AWS_REGION
      value: ${AWS_REGION}
    
    # Age Verification
    - name: VERIFF_API_KEY
      value: ${VERIFF_API_KEY}
    - name: VERIFF_SECRET_KEY
      value: ${VERIFF_SECRET_KEY}
    
    # Analytics
    - name: POSTHOG_API_KEY
      value: ${POSTHOG_API_KEY}
    - name: POSTHOG_HOST
      value: https://app.posthog.com

# Health check configuration
health-check:
  path: /health
  interval: 30
  timeout: 5
  healthy-threshold: 2
  unhealthy-threshold: 3

# Auto scaling configuration
auto-scaling:
  min-size: 1
  max-size: 10
  target-cpu: 70
  target-memory: 80
