name: Security & Maintenance

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  dependency-audit:
    name: Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Audit backend dependencies
        run: |
          cd backend
          npm audit --audit-level=moderate
        continue-on-error: true

      - name: Audit frontend dependencies
        run: |
          cd frontend
          npm audit --audit-level=moderate
        continue-on-error: true

      - name: Generate audit report
        run: |
          echo "# Dependency Audit Report" > audit-report.md
          echo "Generated on: $(date)" >> audit-report.md
          echo "" >> audit-report.md
          echo "## Backend Audit" >> audit-report.md
          cd backend && npm audit --json > ../backend-audit.json || true
          cd ../frontend && npm audit --json > ../frontend-audit.json || true

      - name: Upload audit results
        uses: actions/upload-artifact@v4
        with:
          name: audit-report
          path: |
            audit-report.md
            backend-audit.json
            frontend-audit.json
          retention-days: 30

  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript', 'typescript' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-extended,security-and-quality

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{matrix.language}}"

  dependency-update:
    name: Update Dependencies
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Update backend dependencies
        run: |
          cd backend
          npm update
          npm audit fix --force || true

      - name: Update frontend dependencies
        run: |
          cd frontend
          npm update
          npm audit fix --force || true

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
          else
            echo "changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.changes.outputs.changes == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore: update dependencies and fix security vulnerabilities'
          title: 'Automated Dependency Updates'
          body: |
            ## Automated Dependency Updates
            
            This PR contains automated dependency updates and security fixes.
            
            ### Changes:
            - Updated npm dependencies to latest versions
            - Applied security fixes where available
            - Resolved audit warnings
            
            ### Testing:
            Please ensure all tests pass before merging.
            
            Generated by GitHub Actions on $(date)
          branch: automated-dependency-updates
          delete-branch: true

  docker-security-scan:
    name: Docker Security Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          cd backend
          docker build -t inked-draw-backend:latest .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'inked-draw-backend:latest'
          format: 'sarif'
          output: 'docker-trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'docker-trivy-results.sarif'

  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install license checker
        run: npm install -g license-checker

      - name: Check backend licenses
        run: |
          cd backend
          npm ci
          license-checker --json --out ../backend-licenses.json

      - name: Check frontend licenses
        run: |
          cd frontend
          npm ci
          license-checker --json --out ../frontend-licenses.json

      - name: Upload license reports
        uses: actions/upload-artifact@v4
        with:
          name: license-reports
          path: |
            backend-licenses.json
            frontend-licenses.json
          retention-days: 30

  performance-monitoring:
    name: Performance Monitoring
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          cd backend
          npm ci

      - name: Run performance tests
        run: |
          cd backend
          # Add performance testing commands here
          echo "Performance tests would run here"

      - name: Bundle size analysis
        run: |
          cd frontend
          npm ci
          npm run build
          # Add bundle analysis here
          echo "Bundle size analysis would run here"

  notify-security-issues:
    name: Notify Security Issues
    runs-on: ubuntu-latest
    needs: [dependency-audit, codeql-analysis, docker-security-scan]
    if: failure()

    steps:
      - name: Notify security team
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: 'ðŸš¨ Security scan detected issues in Inked Draw repository!'
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SECURITY_SLACK_WEBHOOK_URL }}
